include:
  - project: "sinch/sinch-projects/sinch-platform/infra/pipeline/kubernetes-components"
    ref: 1.5.19
    file: "kubernetes-components.template.gitlab-ci.yml"

stages:
  - build
  - test
  - image
  # - pre-deploy
  - deploy

variables:
  NO_COLOR: 1

.yarn-job:
  image: node:18
  tags:
    - glsr
    - eu1tst
  cache:
    key:
      files:
        - spago.dhall
        - yarn.lock
    paths:
      - .spago
      - node_modules
      - output
  before_script:
    - apt-get update
    - apt-get install libtinfo5 # Needed by PureScript 0.14.7
    - yarn install

build:
  extends: .yarn-job
  stage: build
  script:
    - yarn build
  artifacts:
    paths:
      - dist

test:
  extends: .yarn-job
  stage: test
  cache:
    policy: pull
  script:
    - yarn test

build-and-push-image:
  stage: image
  tags:
    - glsr
    - eu1tst
  only: [ development, master ]
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$NEXUS_REGISTRY\":{\"username\":\"$NEXUS_USER\",\"password\":\"$NEXUS_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - >-
      /kaniko/executor
      --registry-mirror nexus.int.clxnetworks.net:8009
      --context .
      --dockerfile ./docker/Dockerfile
      --destination $NEXUS_REGISTRY/$CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA

# neuvector:
#   stage: pre-deploy
#   only: [ master ]
#   image: nexus.int.clxnetworks.net:8089/pipeline/neuvector:latest
#   variables:
#     nexus_user: $NEXUS_USER
#     nexus_password: $NEXUS_PASSWORD
#     scan_target: $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
#   script:
#     - scan
#   artifacts:
#     when: always
#     paths:
#       - ./nvreport/scan-summary.txt
#       - ./nvreport/security-report.csv
#       - ./nvreport/scan-repository.json

# Build and publish project documentation.
pages:
  extends: .yarn-job
  stage: deploy
  only: [ development, master ]
  needs: [ test ]
  cache:
    policy: pull
  script:
    - yarn spago docs
    - mv generated-docs/html public
  artifacts:
    paths:
      - public

.deploy-k8s:
  image: alpine:latest
  stage: deploy
  when: manual
  extends:
    - .kubernetes-components
  script:
    - install_dependencies
    - configure_kubectl
    - ensure_namespace
    - >-
      helm upgrade
      --install sofa
      --values ./helm/config/$CI_ENVIRONMENT_NAME.yaml
      --set image.tag=$CI_COMMIT_SHORT_SHA
      ./helm

.stop-k8s:
  image: alpine:latest
  stage: deploy
  when: manual
  extends:
    - .kubernetes-components
  script:
    - install_dependencies
    - configure_kubectl
    - ensure_namespace
    - helm uninstall sofa
    - kubectl get deployment
    - helm list

deploy-k8s-staging:
  extends: .deploy-k8s
  tags:
    - glsr
    - eu1tst
  only: [ development, master ]
  environment:
    name: eu1tst
    on_stop: stop-k8s-staging

stop-k8s-staging:
  extends: .stop-k8s
  tags:
    - glsr
    - eu1tst
  only: [ development, master ]
  environment:
    name: eu1tst
    action: stop

deploy-k8s-prod:
  extends: .deploy-k8s
  tags:
    - glsr
    - eu1
  only: [ master ]
  environment:
    name: eu1
    on_stop: stop-k8s-prod

stop-k8s-prod:
  extends: .stop-k8s
  tags:
    - glsr
    - eu1
  only: [ master ]
  environment:
    name: eu1
    action: stop

deploy-salesforce-sofa:
  image: salesforce/salesforcedx:7.153.0-slim
  stage: deploy
  tags:
    - glsr
    - eu1tst
  only: [ development, master ]
  when: manual
  environment:
    name: sf-sofa
  script:
    - >-
      ./salesforce/build-deployment
      --ordering-base-url https://ordering.eu1tst.bpa.unauth.int.staging.sinch.com
      --smart-spec-base-url https://smart-solution.eu1tst.bpa.unauth.int.staging.sinch.com
      --deployment-env staging
  artifacts:
    paths: [ dist-sf ]

deploy-salesforce-fullsb:
  image: salesforce/salesforcedx:7.153.0-slim
  stage: deploy
  tags:
    - glsr
    - eu1tst
  only: [ development, master ]
  when: manual
  environment:
    name: sf-fullsb
  script:
    - >-
      ./salesforce/build-deployment
      --ordering-base-url https://ordering.eu1tst.bpa.unauth.int.staging.sinch.com
      --smart-spec-base-url https://smart-solution.eu1tst.bpa.unauth.int.staging.sinch.com
      --deployment-env staging
  artifacts:
    paths: [ dist-sf ]

deploy-salesforce-uat:
  image: salesforce/salesforcedx:7.153.0-slim
  stage: deploy
  tags:
    - glsr
    - eu1tst
  only: [ development, master ]
  when: manual
  environment:
    name: sf-uat
  script:
    - >-
      ./salesforce/build-deployment
      --ordering-base-url https://ordering.eu1tst.bpa.unauth.int.staging.sinch.com
      --smart-spec-base-url https://smart-solution.eu1tst.bpa.unauth.int.staging.sinch.com
      --deployment-env staging
  artifacts:
    paths: [ dist-sf ]

deploy-salesforce-prd:
  image: salesforce/salesforcedx:7.153.0-slim
  stage: deploy
  tags:
    - glsr
    - eu1
  only: [ master ]
  when: manual
  environment:
    name: sf-prd
  script:
    - >-
      ./salesforce/build-deployment
      --ordering-base-url https://ordering.eu1.bpa.unauth.int.prod.sinch.com
      --smart-spec-base-url https://smart-solution.eu1.bpa.unauth.int.prod.sinch.com
      --deployment-env production
  artifacts:
    paths: [ dist-sf ]
