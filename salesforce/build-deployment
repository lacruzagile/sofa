#!/usr/bin/env bash

set -xeuo pipefail

tmpPath="$(mktemp -d)"

trap 'rm -rf "$tmpPath"' EXIT

css=(dist/sofa.*.css)
if (( ${#css[@]} != 1 )); then
    echo "Expected one CSS files, got ${#css[@]}"
    exit 1
fi

js=(dist/sofa.*.js)
if (( ${#js[@]} != 1 )); then
    echo "Expected one JavaScript file, got ${#js[@]}"
    exit 1
fi

orderingBaseUrl=
smartSpecBaseUrl=
while (( $# > 0 )); do
    opt="$1"
    shift

    case "$opt" in
        --ordering-base-url)
            orderingBaseUrl="$1"
            shift
            ;;
        --smart-spec-base-url)
            smartSpecBaseUrl="$1"
            shift
            ;;
        --deployment-env)
            deploymentEnv="$1"
            shift
            ;;
        *)
            echo "Unknown option: $opt"
            exit 1
            ;;
    esac
done

sfdx force:project:create \
     --template=empty \
     --outputdir="$tmpPath" \
     --projectname=sofa

projectPath="$tmpPath/sofa"
forceappPath="$projectPath/force-app"
resourcePath="$forceappPath/main/default/staticresources"
pagePath="$forceappPath/main/default/pages"

mkdir -p "$resourcePath" "$pagePath"

# The quote page.
sed -e "s!@css@!${css[0]}!" \
    -e "s!@js@!${js[0]}!" \
    -e "s!@orderingBaseUrl@!$orderingBaseUrl!" \
    -e "s!@smartSpecBaseUrl@!$smartSpecBaseUrl!" \
    -e "s!@deploymentEnv@!$deploymentEnv!" \
    salesforce/sofaPage.page \
    > "$pagePath/sofaPage.page"

cp salesforce/sofaPage.page-meta.xml "$pagePath"
cp salesforce/sofaBundle.resource-meta.xml "$resourcePath"

# The order listing and create order pages.
sed -e "s!@css@!${css[0]}!" \
    -e "s!@js@!${js[0]}!" \
    -e "s!@orderingBaseUrl@!$orderingBaseUrl!" \
    -e "s!@smartSpecBaseUrl@!$smartSpecBaseUrl!" \
    -e "s!@deploymentEnv@!$deploymentEnv!" \
    salesforce/sofaPagePOC.page \
    > "$pagePath/sofaPagePOC.page"

cp salesforce/sofaPagePOC.page-meta.xml "$pagePath"
cp salesforce/sofaBundle.resource-meta.xml "$resourcePath"

zip -r "$resourcePath/sofaBundle.resource" dist/

pushd "$projectPath"
sfdx force:source:convert --outputdir "$tmpPath/dist/sofa"
sfdx force:auth:jwt:grant \
     --clientid "$SF_CLIENT_ID" \
     --jwtkeyfile "$SF_CLIENT_SECRET" \
     --username "$SF_USERNAME" \
     --instanceurl "$SF_INSTANCEURL" \
     --setdefaultusername
sfdx force:mdapi:deploy -d "$tmpPath/dist/sofa" -w 2
popd

cp -r "$tmpPath/dist/sofa" dist-sf
